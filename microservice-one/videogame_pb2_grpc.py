# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import videogame_pb2 as videogame__pb2


class VideogameStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SaveVideogame = channel.unary_unary(
        '/Videogame/SaveVideogame',
        request_serializer=videogame__pb2.Game.SerializeToString,
        response_deserializer=videogame__pb2.GameResponse.FromString,
        )
    self.GetVideogame = channel.unary_unary(
        '/Videogame/GetVideogame',
        request_serializer=videogame__pb2.Empty.SerializeToString,
        response_deserializer=videogame__pb2.GameMultipleResponse.FromString,
        )


class VideogameServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SaveVideogame(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetVideogame(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VideogameServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SaveVideogame': grpc.unary_unary_rpc_method_handler(
          servicer.SaveVideogame,
          request_deserializer=videogame__pb2.Game.FromString,
          response_serializer=videogame__pb2.GameResponse.SerializeToString,
      ),
      'GetVideogame': grpc.unary_unary_rpc_method_handler(
          servicer.GetVideogame,
          request_deserializer=videogame__pb2.Empty.FromString,
          response_serializer=videogame__pb2.GameMultipleResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Videogame', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
